{"version":3,"sources":["App.tsx","index.tsx"],"names":["axios","defaults","baseURL","fheGroupsCsvUrl","getCsv","url","completion","get","then","response","csvtojson","fromString","data","catch","error","console","log","PageBreak","className","Title","props","children","Entry","name","value","FrontPage","month","Date","getMonth","academicSeason","getFullYear","src","alt","FHEGroupsPage","fheGroups","fheGroupApartments","map","group","Number","apartment","join","ApartmentPage","number","members","member","Name","LeaderItem","leader","style","fontWeight","Calling","LeaderPages","leaders","groupBy","CallingsToKnow","callings","executiveSecretary","find","calling","Member","filter","fontSize","fontStyle","App","React","useState","apartments","setApartments","setCallings","setFHEGroups","setLeaders","setMembers","useEffect","undefined","loading","bgColor","spinnerColor","textColor","text","sortedApartments","sortBy","apartmentMembers","sortedFHEGroups","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62857221.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport csvtojson from \"csvtojson\";\nimport LoadingScreen from \"react-loading-screen\";\nimport groupBy from \"lodash/groupBy\";\nimport sortBy from \"lodash/sortBy\";\nimport { Dictionary } from \"lodash\";\n\naxios.defaults.baseURL = \"https://provoysa248-cors.herokuapp.com\";\n\nconst apartmentsCsvUrl =\n  \"docs.google.com/spreadsheets/d/e/2PACX-1vS_qHpeOyUG7VRBPKZsUdcIBvjze0fRonheEYaIib2-ljaCce-YM3og9XQk7o3-w5DMHkTNL0TjX0fh/pub?gid=1847684935&single=true&output=csv\";\n\nconst callingsToKnowCsvUrl =\n  \"docs.google.com/spreadsheets/d/e/2PACX-1vS_qHpeOyUG7VRBPKZsUdcIBvjze0fRonheEYaIib2-ljaCce-YM3og9XQk7o3-w5DMHkTNL0TjX0fh/pub?gid=1341874055&single=true&output=csv\";\n\nconst fheGroupsCsvUrl =\n  \"docs.google.com/spreadsheets/d/e/2PACX-1vS_qHpeOyUG7VRBPKZsUdcIBvjze0fRonheEYaIib2-ljaCce-YM3og9XQk7o3-w5DMHkTNL0TjX0fh/pub?gid=1483231470&single=true&output=csv\";\n\nconst leadersCsvUrl =\n  \"docs.google.com/spreadsheets/d/e/2PACX-1vS_qHpeOyUG7VRBPKZsUdcIBvjze0fRonheEYaIib2-ljaCce-YM3og9XQk7o3-w5DMHkTNL0TjX0fh/pub?gid=827977769&single=true&output=csv\";\n\nconst membersCsvUrl =\n  \"docs.google.com/spreadsheets/d/e/2PACX-1vS_qHpeOyUG7VRBPKZsUdcIBvjze0fRonheEYaIib2-ljaCce-YM3og9XQk7o3-w5DMHkTNL0TjX0fh/pub?gid=708295423&single=true&output=csv\";\n\ntype Apartment = {\n  Number: string;\n  \"FHE Group\": string;\n  \"Occupants' Gender\": \"Male\" | \"Female\";\n};\n\ntype Calling = {\n  \"Calling(s)\": string;\n  Member: string;\n  \"2nd Member\": string;\n};\n\ntype FHEGroup = {\n  Number: string;\n  \"Male Group Leader\": string;\n  \"Female Group Leader\": string;\n};\n\ntype Leader = {\n  Calling: string;\n  \"Couple's Name\": string;\n  \"Address 1\": string;\n  \"Address 2\": string;\n  \"Phone Number\": string;\n  Email: string;\n  \"Spouse Phone Number\": string;\n  \"Couple's Photo URL\": string;\n};\n\ntype Member = {\n  Name: string;\n  Apartment: string;\n  \"Phone Number\": string;\n  \"Photo URL\": string;\n};\n\nconst getCsv = (url: string, completion: (csv: any[]) => void) =>\n  axios\n    .get(url)\n    .then((response) => {\n      csvtojson().fromString(response.data).then(completion);\n    })\n    .catch((error) => console.log(error));\n\nconst PageBreak = () => <p className=\"pageBreak\" />;\n\nconst Title = (props: { children: React.ReactNode }) => (\n  <h1 className=\"title\">{props.children}</h1>\n);\n\nconst Entry = ({ name, value }: { name: string; value: string }) => (\n  <div className=\"entry\">\n    <div className=\"entryKeyOrValue\">{name}</div>\n    <div className=\"entryKeyOrValue\">{value}</div>\n  </div>\n);\n\nconst academicSeason = () => {\n  const month = new Date().getMonth();\n  if (month < 4) {\n    return \"Winter\";\n  } else if (month < 8) {\n    return \"Summer\";\n  } else {\n    return \"Fall\";\n  }\n};\n\nconst year = () => new Date().getFullYear();\n\nconst FrontPage = () => (\n  <>\n    <h1 className=\"frontTitle\">\n      Provo YSA 248th\n      <br />\n      Ward Directory\n      <br />\n      {`${academicSeason()} ${year()}`}\n    </h1>\n    <img\n      className=\"frontImage\"\n      src=\"Photos/Provo City Center Temple.JPG\"\n      alt=\"Provo City Center Temple\"\n    />\n    <PageBreak />\n  </>\n);\n\nconst FHEGroupsPage = ({\n  fheGroups,\n  fheGroupApartments,\n}: {\n  fheGroups: FHEGroup[];\n  fheGroupApartments: Dictionary<Apartment[]>;\n}) => (\n  <>\n    <Title>FHE Groups</Title>\n    <div className=\"fheGroupsGrid\">\n      {fheGroups.map((group) => (\n        <div>\n          <h2 className=\"subtitle\">{`Group ${group.Number}`}</h2>\n          <div className=\"subtitleNote\">{`${group[\"Female Group Leader\"]} & ${group[\"Male Group Leader\"]}`}</div>\n          <div className=\"centeredEntry\">\n            {fheGroupApartments[group.Number]\n              .map((apartment) => apartment.Number)\n              .join(\" & \")}\n          </div>\n        </div>\n      ))}\n    </div>\n    <PageBreak />\n  </>\n);\n\nconst ApartmentPage = ({\n  number,\n  members,\n}: {\n  number: string;\n  members: Member[];\n}) => (\n  <>\n    <h2>{`Apartment ${number}`}</h2>\n    <div className=\"grid\">\n      {members.map((member) => (\n        <div className=\"gridItem\">\n          <div className=\"gridItemColumn\">\n            <img\n              className=\"memberImage\"\n              src={member[\"Photo URL\"]}\n              alt={member[\"Photo URL\"]}\n            />\n            <div>{member.Name}</div>\n            <div>{member[\"Phone Number\"]}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n    <PageBreak />\n  </>\n);\n\nconst LeaderItem = ({ leader }: { leader: Leader }) => (\n  <div className=\"gridItemColumn\">\n    <img\n      className=\"memberImage\"\n      src={leader[\"Couple's Photo URL\"]}\n      alt={leader[\"Couple's Photo URL\"]}\n    />\n    <div style={{ fontWeight: \"bold\" }}>{leader.Calling}</div>\n    <div>{leader[\"Couple's Name\"]}</div>\n    <div>{leader[\"Address 1\"]}</div>\n    <div>{leader[\"Address 2\"]}</div>\n    <div>{leader[\"Phone Number\"]}</div>\n    <div>{leader[\"Email\"]}</div>\n    <div>{leader[\"Spouse Phone Number\"]}</div>\n  </div>\n);\n\nconst LeaderPages = (props: { leaders: Leader[] }) => {\n  const leaders = groupBy(props.leaders, \"Calling\");\n  return (\n    <>\n      <div className=\"leaderColumn\">\n        <div className=\"leaderRow\">\n          <LeaderItem leader={leaders[\"Bishop\"][0]} />\n        </div>\n        <div className=\"leaderRow\">\n          <LeaderItem leader={leaders[\"1st Counselor\"][0]} />\n          <LeaderItem leader={leaders[\"2nd Counselor\"][0]} />\n        </div>\n      </div>\n      <PageBreak />\n      <div className=\"leaderColumn\">\n        <div className=\"leaderRow\">\n          <LeaderItem leader={leaders[\"Ward Clerk\"][0]} />\n        </div>\n        <div className=\"leaderRow\">\n          <LeaderItem leader={leaders[\"High Counselor\"][0]} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst EXECUTIVE_SECRETARY = \"Executive Secretary\";\n\nconst CallingsToKnow = ({\n  callings,\n  members,\n}: {\n  callings: Calling[];\n  members: Member[];\n}) => {\n  const executiveSecretary = members.find(\n    (member) =>\n      member.Name ===\n      callings.find((calling) => calling[\"Calling(s)\"] === EXECUTIVE_SECRETARY)\n        ?.Member\n  );\n  return (\n    <>\n      <Title>Some Callings to Know</Title>\n      {callings\n        .filter((calling) => calling[\"Calling(s)\"] !== EXECUTIVE_SECRETARY)\n        .map((calling) => (\n          <Entry\n            name={calling[\"Calling(s)\"]}\n            value={[calling.Member, calling[\"2nd Member\"]]\n              .filter((member) => member)\n              .join(\" & \")}\n          />\n        ))}\n      {executiveSecretary && (\n        <>\n          <br />\n          <h1 style={{ fontSize: \"35px\", fontStyle: \"italic\" }}>\n            For an appointment with the Bishop\n            <br />\n            Please contact:\n          </h1>\n          <Entry\n            name={EXECUTIVE_SECRETARY}\n            value={`${executiveSecretary.Name} ~ ${executiveSecretary[\"Phone Number\"]}`}\n          />\n        </>\n      )}\n      <PageBreak />\n    </>\n  );\n};\n\nfunction App() {\n  const [apartments, setApartments] = React.useState<Apartment[]>();\n  const [callings, setCallings] = React.useState<Calling[]>();\n  const [fheGroups, setFHEGroups] = React.useState<FHEGroup[]>();\n  const [leaders, setLeaders] = React.useState<Leader[]>();\n  const [members, setMembers] = React.useState<Member[]>();\n\n  React.useEffect(() => {\n    getCsv(apartmentsCsvUrl, setApartments);\n    getCsv(callingsToKnowCsvUrl, setCallings);\n    getCsv(fheGroupsCsvUrl, setFHEGroups);\n    getCsv(leadersCsvUrl, setLeaders);\n    getCsv(membersCsvUrl, setMembers);\n  }, []);\n\n  if (\n    apartments === undefined ||\n    callings === undefined ||\n    fheGroupsCsvUrl === undefined ||\n    leaders === undefined ||\n    members === undefined\n  ) {\n    return (\n      <LoadingScreen\n        loading={true}\n        bgColor=\"#f1f1f1\"\n        spinnerColor=\"#9ee5f8\"\n        textColor=\"#676767\"\n        text=\"Loading...\"\n      />\n    );\n  }\n\n  const sortedApartments = sortBy(apartments, \"Occupants' Gender\", \"Number\");\n  const apartmentMembers = groupBy(members, \"Apartment\");\n  const sortedFHEGroups = sortBy(fheGroups, \"Number\");\n  const fheGroupApartments = groupBy(sortBy(apartments, \"Number\"), \"FHE Group\");\n\n  return (\n    <main>\n      <FrontPage />\n      <FHEGroupsPage\n        fheGroups={sortedFHEGroups}\n        fheGroupApartments={fheGroupApartments}\n      />\n      {sortedApartments.map((apartment) => (\n        <ApartmentPage\n          key={apartment.Number}\n          number={apartment.Number}\n          members={apartmentMembers[apartment.Number] ?? []}\n        />\n      ))}\n      <LeaderPages leaders={leaders} />\n      <CallingsToKnow callings={callings} members={members} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}